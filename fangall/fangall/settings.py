"""
Django settings for house project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# 项目的根路径
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/
# 请注意上面这个链接 该链接提供了部署项目的必要参考加 强烈建议阅读一下

# SECURITY WARNING: keep the secret key used in production secret!
# 请注意这里的提示 在上线产品中这个SECRET_KEY是需要保护起来的
SECRET_KEY = 'uq7##@ciddcuz!-6qum!vgh_f-rc2!k2#ql867tm4!=zy+yx0#'
# SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
# 注意这里的提示 在上线产品中一定不能够将DEBUG设置为True
DEBUG = False
ALLOWED_HOSTS = ['*']

# Application definition
# 配置应用程序
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    # 'ckeditor',
    # 'ckeditor_uploader',
    # 'django_crontab',
    'common',
    # 'debug_toolbar',
    # 'haystack',
    # 'common.apps.CommonConfig',
]

# CKEditor相关配置
# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'full',
#         'height': 300,
#         'width': 900,
#     },
# }
# CKEDITOR_UPLOAD_PATH = 'editor_images'

# 配置中间件
MIDDLEWARE = [
    # 调试工具栏中间件
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 解决跨域问题的中间件
    'corsheaders.middleware.CorsMiddleware',

    # Django默认的中间件
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 阻止60秒内重复发送短信的中间件
    'api.middlewares.block_sms_middleware',
]

# DEBUG_TOOLBAR_CONFIG = {
#     'JQUERY_URL': 'https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js',
#     'SHOW_COLLAPSED': True,
#     'SHOW_TOOLBAR_CALLBACK': lambda x: True,
# }

# 配置跨域白名单
# CORS_ORIGIN_WHITELIST = ()
# 配置是否跨域读取Cookie信息
# CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'fangall.urls'

# 配置模板文件
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fangall.wsgi.application'

# Database
# 下面的链接是官方文档关于数据库配置的参考 强烈建议阅读一下
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fang',
        'HOST': '120.77.249.236',
        'PORT': 3306,
        'USER': 'root',
        'PASSWORD': '123456',
        'TIME_ZONE': 'Asia/Chongqing',
        'TEST': {
            'NAME': 'test_fang',
            'CHARSET': 'utf8',
            'TIME_ZONE': 'Asia/Chongqing',
        }
    },
    'slave1': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fang',
        'HOST': '120.77.222.217',
        'PORT': 3307,
        'USER': 'root',
        'PASSWORD': '123456',
        'TIME_ZONE': 'Asia/Chongqing',
    },
}

# 配置数据库路由
DATABASE_ROUTERS = [
    # 'common.db_routers.DjangoDbRouter',
    'common.db_routers.MasterSlaveDbRouter',
]

# https://docs.djangoproject.com/en/2.1/topics/i18n/
# 国际化配置
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Chongqing'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
# 静态文件配置
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# python manage.py collectstatic
STATIC_ROOT = '/root/project/static'

# 媒体文件配置
MEDIA_URL = '/media/'
MEDIA_DIR = os.path.join(BASE_DIR, 'media')
MEDIA_ROOT = MEDIA_DIR

# 配置基于Redis的缓存系统
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': [
            'redis://120.77.249.236:6379/0',
        ],
        'KEY_PREFIX': 'fangall',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 500,
            },
            'PASSWORD': 'snaker',
        }
    },
    'page': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': [
            'redis://120.77.249.236:6379/1',
        ],
        'KEY_PREFIX': 'fangall:page',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 1000,
            },
            'PASSWORD': 'snaker',
        }
    },
    'session': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': [
            'redis://120.77.249.236:6379/2',
        ],
        'KEY_PREFIX': 'fangall:session',
        'TIMEOUT': 1209600,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 1000,
            },
            'PASSWORD': 'snaker',
        }
    },
    'code': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': [
            'redis://120.77.249.236:6379/3',
        ],
        'KEY_PREFIX': 'fangall:code',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 500,
            },
            'PASSWORD': 'snaker',
        }
    },
}

# 配置将Session放置在缓存中
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'session'

# SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'

# 配置Django-REST-Framework
REST_FRAMEWORK = {
    # 配置默认页面大小
    'PAGE_SIZE': 5,
    # 配置默认的分页类
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 配置限流类
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
    ),
    # 配置访问次数限制
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',
        'user': '1000/day'
    }
}

# 配置DRF扩展
REST_FRAMEWORK_EXTENSIONS = {
    # 配置默认的缓存超时时间
    'DEFAULT_CACHE_RESPONSE_TIMEOUT': 300,
    # 配置默认使用哪组缓存
    'DEFAULT_USE_CACHE': 'default',
    # 配置默认缓存单个对象的key函数
    'DEFAULT_OBJECT_CACHE_KEY_FUNC': 'rest_framework_extensions.utils.default_object_cache_key_func',
    # 配置默认缓存对象列表的key函数
    'DEFAULT_LIST_CACHE_KEY_FUNC': 'rest_framework_extensions.utils.default_list_cache_key_func',
}

# Celery的相关配置
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_ACCEPT_CONTENT = ['json', ]
# CELERY_TIMEZONE = TIME_ZONE

# 配置自动追加斜杠
APPEND_SLASH = True

# 配置日志
# NOTSET < DEBUG < INFO < WARNING < ERROR < FATAL
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # 配置日志格式化器
    'formatters': {
        'simple': {
            'format': '%(asctime)s %(module)s.%(funcName)s: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'verbose': {
            'format': '%(asctime)s %(levelname)s [%(process)d-%(threadName)s] '
                      '%(module)s.%(funcName)s line %(lineno)d: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        }
    },
    # 配置日志过滤器
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    # 配置日志处理器
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'formatter': 'simple',
        },
        'file1': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': 'fangall.log',
            'when': 'W0',
            'backupCount': 12,
            'formatter': 'simple',
            'level': 'INFO',
        },
        'file2': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': 'error.log',
            'when': 'D',
            'backupCount': 31,
            'formatter': 'verbose',
            'level': 'ERROR',
        },
    },
    # 配置日志器
    'loggers': {
        'django': {
            'handlers': ['console', 'file1', 'file2'],
            'propagate': True,
            'level': 'DEBUG',
        },
    }
}

# CRONTAB_COMMAND_PREFIX = 'LANG_ALL=zh_cn.UTF-8'

# 定时任务配置
# CRONJOBS = [
#     ('* * * * *', 'common.crons.some_task', '>> cron.log'),
# ]

# 邮件配置
EMAIL_HOST = 'smtp.126.com'
EMAIL_PORT = 25

EMAIL_HOST_USER = 'jackfrued@126.com'
EMAIL_HOST_PASSWORD = '1qaz2wsx'
EMAIL_USE_TLS = True
DEFAULT_EMAIL_FROM = 'jackfrued@126.com'

# 配置Haystack
# HAYSTACK_CONNECTIONS = {
#     'default': {
#         'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
#         'URL': 'http://139.198.15.39:9200/',
#         'INDEX_NAME': 'house',
#     },
# }

# 配置添加/删除/修改数据时自动生成索引
# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# 如果需要配置HTTPS相关的东西需要先生成证书(权威证书/自签名证书)

# 配置需要使用HTTPS以及持续时间
SECURE_HSTS_SECONDS = 86400
SECURE_HSTS_PRELOAD = True
SECURE_HSTS_INCLUDE_SUBDOMAINS = True

# 让浏览器不要自作聪明推断内容类型
SECURE_CONTENT_TYPE_NOSNIFF = True

# 开启对跨站脚本攻击的过滤
SECURE_BROWSER_XSS_FILTER = True

# 自动重定向到HTTPS
SECURE_SSL_REDIRECT = True

# Session标识和令牌需要安全传输
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# 拒绝用iframe加载网站页面避免点击劫持攻击
X_FRAME_OPTIONS = 'DENY'
